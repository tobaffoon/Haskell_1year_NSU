square :: Integer -> Integer
square x = x*x
iseven :: Integer -> Bool
iseven n = mod n 2 == 0
pyth :: Integer -> [(Integer, Integer, Integer)]
pyth n = [(a,b,c) | a <- [3..(n+2)],                      --There I find b,c with fixed a, such that a^2+b^2=c^2
   let b | iseven a = square (div a 2) - 1            --This algorythm goes this way: if 'a' is even then b=(a/2)^2-1; c=(a/2)^2+1: 
         | otherwise = div (square a) 2               --c^2-b^2 = (a/2)^4+2*(a/2)^2+1-(a/2)^4+2*(a/2)^2-1 = 4*a^2/4=a^2
       c | iseven a = b + 2                           --If 'a' is odd then b=(a^2)/2-0.5; c=(a^2)/2+0.5
         | otherwise = b + 1]                         --c^2-b^2 = (a^4)/4+0.5(a^2)+0.25-(a^4)/4+0.5(a^2)-0.25 = a^2
{-
  pyth 10
  [(3,4,5),(4,3,5),(5,12,13),(6,8,10),(7,24,25),(8,15,17),(9,40,41),(10,24,26),(11,60,61),(12,35,37)]
  pyth 15
  [(3,4,5),(4,3,5),(5,12,13),(6,8,10),(7,24,25),(8,15,17),(9,40,41),(10,24,26),(11,60,61),(12,35,37),(13,84,85),(14,48,50),(15,112,113),(16,63,65),(17,144,145)]
-}
pyt n = take n [(a,b,c) | c <- [1..], b <- [1..c], a <- [1..b] , a^2+b^2==c^2]
{-
  pyt 10
  [(3,4,5),(6,8,10),(5,12,13),(9,12,15),(8,15,17),(12,16,20),(15,20,25),(7,24,25),(10,24,26),(20,21,29)]  
  pyt 15
  [(3,4,5),(6,8,10),(5,12,13),(9,12,15),(8,15,17),(12,16,20),(15,20,25),(7,24,25),(10,24,26),(20,21,29),(18,24,30),(16,30,34),(21,28,35),(12,35,37),(15,36,39)]
-}
pytprim :: Int -> [(Integer, Integer, Integer)]
pytprim n = take n [(a,b,c) | c <- [1..], b <- [1..c], a <- [1..b] , a^2+b^2==c^2, gcd (gcd a b) c == 1]
{-
pytprim 10
[(3,4,5),(5,12,13),(8,15,17),(7,24,25),(20,21,29),(12,35,37),(9,40,41),(28,45,53),(11,60,61),(33,56,65)]
pytprim 20
[(3,4,5),(5,12,13),(8,15,17),(7,24,25),(20,21,29),(12,35,37),(9,40,41),(28,45,53),(11,60,61),(33,56,65),(16,63,65),(48,55,73),(36,77,85),(13,84,85),(39,80,89),(65,72,97),(20,99,101),(60,91,109),(15,112,113),(44,117,125)]
-}